apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply from: 'libraries.gradle'
apply plugin: 'kotlin-kapt'
/**
 * 共通类，放置共通方法 给每一个子模块调用
 */
//---------测试环境---------------------
apply from: 'tima_test.gradle'
//---------外网环境---------------------
//apply from: 'tima_uat.gradle'
//---------生产环境---------------------
//apply from: 'tima_pro.gradle'
android {
    compileSdkVersion COMPILE_SDK_VERSION



    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode VERSION_CODE
        versionName VERSION_NAME
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
        buildConfigField "String", "SERVICE_URL", "${SERVICE_URL}"
        ndk {
            //选择要添加的对应cpu类型的.so库
            abiFilters 'armeabi-v7a','arm64-v8a',"x86"
            //还可以添加 'armeabi', 'x86'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "isDebug", "false"
        }
        debug{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.tima_pro'
            buildConfigField "boolean", "isDebug", "true"

        }
    }
    kapt {
        javacOptions {
// Increase the max count of errors from annotation processors.
// Default is 100.
            option("-Xmaxerrs", 500)
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    libraries.each { lib ->
        api(lib.value) {
            transitive = true
            exclude module: 'tesng'
            exclude module: 'junit'
        }

    }
    retrofit.each { lib ->
        api(lib.value) {
            transitive = true
            exclude module: 'tesng'
            exclude module: 'junit'
        }
    }
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    kapt rootProject.ext.exps.arouter_compiler
    api 'android.arch.lifecycle:extensions:1.1.1'
    api 'com.github.bumptech.glide:glide:4.7.1'
    api 'com.squareup.okhttp3:okhttp:3.10.0'
    api 'io.reactivex.rxjava2:rxjava:2.1.16'
    api 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    api 'io.reactivex.rxjava2:rxandroid:2.0.2'
    api 'com.google.code.gson:gson:2.8.2'
    api 'org.greenrobot:eventbus:3.1.1'
    api 'com.amap.api:navi-3dmap:6.2.0_3dmap6.4.0'
    api 'com.amap.api:search:6.1.0'
    api 'com.amap.api:location:4.2.0'
    api 'com.github.tbruyelle:rxpermissions:0.10.2'
    api 'com.android.support:multidex:1.0.3'
    api 'com.zhihu.android:matisse:0.5.2-beta2'
    //轮子
    api 'com.contrarywind:Android-PickerView:4.1.6'
    //标签
    api 'com.hyman:flowlayout-lib:1.1.2'
    api 'org.litepal.android:core:1.6.1'
    api("com.afollestad.material-dialogs:core:0.9.5.0") {
        exclude group: 'com.android.support', module: 'support-v13'
        exclude group: 'com.android.support', module: 'support-vector-drawable'
    }
    //环信客服SDK
    api 'com.hyphenate:kefu-easeui-android:latest.release' //或者 compile 'com
//增加这行
    api 'com.tencent.xinge:xinge:4.0.3-release'
    api 'com.tencent.jg:jg:1.1'
    api 'com.tencent.wup:wup:1.0.0.E-release'
    api 'com.tencent.mid:mid:4.0.7'
    //    api libraries.values()
}

